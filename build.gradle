plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.21'
}

group 'KTTT'
version '1.0'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile 'no.tornado:tornadofx:1.7.17'
    compile "org.deeplearning4j:deeplearning4j-core:1.0.0-beta4"

    if(project.hasProperty("cuda")){
        compile 'org.nd4j:nd4j-cuda-10.1-platform:1.0.0-beta4'
    } else {
        compile 'org.nd4j:nd4j-native-platform:1.0.0-beta4'
    }
    //

    compile group: 'org.datavec', name: 'datavec-api', version: '1.0.0-beta4'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task jarKTTT(type: Jar) {
    manifest {
        attributes 'Main-Class': 'main.MainKt'
    }
    baseName = 'kttt'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task jarGui(type: Jar) {
    manifest {
        attributes 'Main-Class': 'gui.MainGuiKt'
    }
    baseName = 'kttt-gui'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task jarSelfplay(type: Jar) {
    manifest {
        attributes 'Main-Class': 'neural.AgentTest'
    }
    baseName = 'selfplay'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task jarAutoFighter(type: Jar) {
    manifest {
        attributes 'Main-Class': 'auto.AutoFighterKt'
    }
    baseName = 'auto_fighter'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
